import random
import pandas as pd

# 个人简介模板
individual_resume = [
"嗨！我是 [姓名]，[X] 性，[年龄] 岁，扎根 [现居地] 发展。[学历] 攻读 [专业] 后，投身行业 [工作年限] 年，积累了从项目策划到落地的全流程经验。我的联系方式：[手机号码]，邮箱 [电子邮箱]，随时等待您的消息。",
"你好！我是 [姓名]，目前在 [现居地] 生活。作为 [年龄] 岁的 [X] 性，我毕业于[专业]，具有[学历] ，并在行业中深耕 [工作年限] 年，擅长 [某具体技能]。若您有进一步了解的需求，可随时通过 [手机号码] 或 [电子邮箱] 联系我。",
"大家好！我是 [姓名]，[X] 性，今年 [年龄] 岁，现居 [现居地]。凭借 [学历] 阶段对 [专业] 的系统学习，以及 [工作年限] 年的实战打磨，已形成扎实的专业能力。期待通过 [手机号码]、[电子邮箱] 与您展开交流。",
"嗨！我叫 [姓名]，[年龄] 岁，[X] 性，在 [现居地] 开启职业征程。从 [学历][专业] 毕业后，我积累了 [工作年限] 年行业经验，熟悉 [某业务流程]。如需沟通，可随时拨打 [手机号码]，或发送邮件至 [电子邮箱]。",
"你好！我是 [姓名]，[X] 性，[年龄] 岁，现居 [现居地]。[学历] 主修 [专业]，并在相关领域持续耕耘 [工作年限] 年，具备独立完成 [某工作任务] 的能力。我的手机 [手机号码]、邮箱 [电子邮箱] 随时在线，静候您的佳音。",
"您好！我是 [姓名]，[年龄] 岁，[X] 性，现扎根 [现居地]。[学历] 毕业于 [专业]，随后在行业中积累了 [工作年限] 年经验，对 [某领域] 有深入见解。若您对我的履历感兴趣，欢迎通过 [手机号码] 或 [电子邮箱] 与我沟通。",
"大家好！我是 [姓名]，[X] 性，[年龄] 岁，现居 [现居地]。从 [学历][专业] 毕业后，我已在行业内沉淀 [工作年限] 年，熟练掌握 [某工具 / 技术]。我的联系方式：[手机号码]，[电子邮箱]，期待与您进一步交流。",
"嗨！我是 [姓名]，[年龄] 岁，[X] 性，目前生活在 [现居地]。[学历] 阶段系统学习 [专业]，并在毕业后的 [工作年限] 年里，专注于 [某方向] 工作。若您有任何疑问，可随时通过 [手机号码] 或 [电子邮箱] 与我联系。",
"你好！我是 [姓名]，[X] 性，[年龄] 岁，常住 [现居地]。[学历] 的 [专业] 学习经历，搭配 [工作年限] 年的行业实践，让我对 [某业务] 驾轻就熟。如需进一步了解，欢迎拨打 [手机号码]，或发邮件至 [电子邮箱]。",
"您好！我叫 [姓名]，[年龄] 岁，[X] 性，在 [现居地] 开启职业新篇章。[学历] 毕业于 [专业]，并在过去 [工作年限] 年中，积累了丰富的 [某类型项目] 经验。我的手机 [手机号码] 和邮箱 [电子邮箱] 已备好，期待与您对话。",
"嗨！我是 [姓名]，目前在 [现居地] 发展，[年龄] 岁，[X] 性。[工作年限] 年的行业深耕，源于 [学历] [专业] 的扎实基础。如需进一步沟通，可随时联系 [手机号码] 或 [电子邮箱]。",
"你好！我叫[姓名]，拥有 [工作年限] 年经验，我毕业于[专业]，拥有[学历]，今年 [年龄] 岁，[X] 性。现居 [现居地]，期待合作，我的联系方式是 [手机号码]，邮箱 [电子邮箱]。",
"大家好！我是 [姓名]，联系方式[手机号码] 和 [电子邮箱] 随时畅通。[年龄] 岁的我，[X] 性，[学历] [专业]，在行业里沉淀了 [工作年限] 年，目前生活在 [现居地]。",
"您好！我叫 [姓名]，[现居地] 是我的常驻城市，[年龄] 岁，[X] 性。[学历] [专业] 的学习经历，加上 [工作年限] 年的实战经验，让我不断成长。欢迎通过 [手机号码] 或 [电子邮箱] 联系我。",
"嗨！我从 [专业] 毕业，获得[学历] ，我叫 [姓名]，具有[工作年限] 年的职场积累，[年龄] 岁， [X] 性。现居 [现居地]，如有需要，可随时通过 [手机号码]、[电子邮箱] 与我沟通。",
"你好！我是 [姓名]，[电子邮箱] 和 [手机号码]。在 [现居地] 生活的我，[年龄] 岁，[X] 性，[学历] [专业] 出身，深耕行业 [工作年限] 年。",
"大家好！我是[专业] 毕业，拿到[学历]，我叫[姓名]，在行业拼搏了 [工作年限] 年。今年 [年龄] 岁，[X] 性，现居 [现居地]，期待与您交流，联系方式：[手机号码]、[电子邮箱]。",
"您好！我是 [姓名]，[年龄] 岁的 [X] 性，在 [现居地] 开启职业征程。[工作年限] 年的经验，源于 [学历] [专业] 的扎实积累。如需沟通，可拨打 [手机号码]，或发送邮件至 [电子邮箱]。",
"嗨！[现居地] 的 [姓名] 向您问好，今年 [年龄] 岁，[X] 性。[学历] [专业] 的学习，结合 [工作年限] 年的实践，让我收获满满。我的联系方式是 [手机号码]，邮箱 [电子邮箱]。",
"你好！我拥有 [工作年限] 年行业经验，我是[姓名]，[年龄] 岁，[X] 性，具有[学历] 从[专业]毕业。目前在 [现居地] 发展，欢迎通过 [手机号码] 或 [电子邮箱] 与我联系。",
]

# 结束语模板
end_statement = [
    "以上就是我的个人情况，如果您觉得我适合相关岗位，期待能有进一步沟通的机会，谢谢。",
    "以上是我的个人履历，无论是行业洞察还是实操能力，都已准备好迎接贵公司的考验，静候佳音。",
    "感谢您花时间了解我，我相信自己的技能与热情，能为贵公司团队带来新的活力与创新思维。",
    "希望我的经验和能力能契合贵公司需求，若有幸加入，我将以饱满的热情投入工作，助力团队目标达成。",
    "再次感谢您的关注，我已准备好将个人成长与贵公司发展深度绑定，用实力证明选择我的正确性。",
    "我的专业积累与职业追求，都与贵公司的发展方向高度契合，真诚期待能加入团队贡献力量。",
    "感谢您审阅我的资料，无论是高效执行任务，还是攻克复杂难题，我都能为贵公司提供可靠支持。",
    "若能获得与贵公司合作的机会，我将充分发挥学习能力与创造力，在岗位上不断实现自我突破。",
    "希望我的职业背景能满足贵公司的期待，我已准备好迎接挑战，用行动书写新的职业篇章。",
    "感谢您的了解，我始终以高标准要求自己，期待在贵公司的平台上，实现个人与企业的双赢。",
    "我的工作经历与专业素养，已为新的职业旅程做好充分准备，渴望在贵公司开启新的奋斗征程。",
    "若您认可我的能力，我定以高度的责任心和执行力，为贵公司项目推进与业务发展全力以赴。",
    "再次感谢您的耐心阅读，我相信凭借过往积累与进取精神，能在贵公司发挥更大价值。",
    "希望能有机会加入贵公司，将我的行业资源与专业技能，转化为推动团队进步的实际成果。",
    "感谢您的关注，无论是快速适应新环境，还是深度参与项目，我都有信心在贵公司交出满意答卷。",
    "我的职业成长路径与贵公司的发展理念不谋而合，真诚希望能与团队携手创造更多可能。",
    "若能获得面试机会，我将全方位展示自己的能力与潜力，为贵公司注入积极向上的能量。",
    "感谢您了解我的个人情况，我已准备好用专业与热情，在贵公司的舞台上绽放光彩。",
    "希望我的履历能符合贵公司的需求，我将以持续学习的态度，在新岗位上与团队共同进步。",
    "再次感谢您的审阅，我期待能在贵公司开启职业新篇章，用优异表现回报您的信任。",
]

# 教育经历描述模板
edu_description = [
"我于 [入学时间] - [毕业时间] 就读 [学校名称]，完成 [专业] 学习，取得 [学历]。",
"[学校名称] [专业] [学历]（[入学时间] - [毕业时间]），系统学习专业知识，顺利完成学业。",
"自 [入学时间] 至 [毕业时间]，在 [学校名称] 攻读 [专业]，最终获得 [学历] 学位。",
"[入学时间] - [毕业时间]，我在 [学校名称] 完成 [专业] 学业，获得 [学历]。",
"作为 [学校名称] [专业] [学历] 毕业生，我的学习时段为 [入学时间] - [毕业时间]。",
"我在 [入学时间] - [毕业时间] 期间，于 [学校名称] 修读 [专业]，并获得 [学历]。",
"[学校名称]（[入学时间] - [毕业时间]），[专业] 专业，[学历] 学历，顺利完成学习任务。",
"[入学时间] - [毕业时间]，于 [学校名称] 取得 [专业] [学历]，完成系统学习。",
"[学历]，[学校名称] [专业]，[入学时间] - [毕业时间]，完成全部课程并毕业。",
"我在 [学校名称] [专业] 完成 [学历] 学习，时间跨度为 [入学时间] - [毕业时间]。",
"[入学时间] - [毕业时间] 就读 [学校名称] [专业]，成功获取 [学历]。",
"[学校名称] [专业]，[入学时间] - [毕业时间]，通过学习获得 [学历]。",
"以 [学历] 毕业于 [学校名称] [专业]，学习阶段为 [入学时间] - [毕业时间]。",
"[入学时间] - [毕业时间] 在 [学校名称] 学习 [专业]，最终获得 [学历]。",
"[学历]，[入学时间] - [毕业时间] 于 [学校名称] [专业] 完成学业。",
"于 [学校名称] [专业] 取得 [学历]，学习时间：[入学时间] - [毕业时间]。",
"[学校名称]（[入学时间] - [毕业时间]）[专业] 专业，毕业时获得 [学历]。",
"[入学时间] - [毕业时间] 在 [学校名称] 完成 [专业] 学习，顺利取得 [学历]。",
"[学历]，毕业于 [入学时间] - [毕业时间] 的 [学校名称] [专业] 。",
]

# 求职意向描述模板
purposes_description = [
"我期望在互联网行业从事产品经理岗位，倾向全职的工作性质，工作地点优先考虑北京，薪资范围期望在 15K - 25K。",
"我希望在新能源行业担任研发工程师，工作性质为长期稳定的全职，工作地点可选上海、深圳，薪资期望是月薪 18K - 30K。",
"我目标岗位是市场营销专员，期望在快消行业发展，工作性质全职，工作地点首选广州，薪资范围在 8K - 15K。",
"对于职业发展，我锁定金融行业的风控岗位，工作性质为全职坐班，工作地点倾向于杭州，期望薪资是年薪 20 万 - 35 万。",
"我期待在教育行业担任课程顾问，工作性质全职，工作地点希望在成都，薪资期望为底薪 + 提成，综合月薪 8K - 12K。",
"我求职的目标岗位是软件开发工程师，期望行业为人工智能领域，工作性质全职，工作地点可接受远程或深圳，薪资范围 20K - 35K。",
"我希望在医疗器械行业从事销售代表岗位，工作性质全职，工作地点优先考虑武汉，期望月薪 10K - 18K。",
"从职业规划来看，我心仪传媒行业的新媒体运营岗位，工作性质全职，工作地点期望在长沙，薪资期望是 10K - 15K。",
"我求职意向为建筑行业的结构设计师岗位，期望工作性质全职，工作地点可选北京、天津，薪资范围在 12K - 22K。",
"我锁定在电商行业担任运营主管，工作性质全职，工作地点希望在杭州，期望年薪 18 万 - 28 万。",
"我希望在汽车制造行业担任机械工程师，工作性质为全职，工作地点首选长春、合肥，薪资范围期望在 12K - 20K。",
"我求职的目标岗位是人力资源专员，期望深耕制造业，工作性质为全职，工作地点倾向于苏州，薪资期望月薪 8K - 13K。",
"我期待在游戏行业担任 UI 设计师，工作性质全职，工作地点可选择上海或远程办公，薪资范围 15K - 25K。",
"从职业发展规划出发，我锁定物流行业的供应链管理岗位，工作性质为全职，工作地点希望在郑州，期望年薪 15 万 - 25 万。",
"我想在生物医药行业从事质量检测岗位，工作性质全职，工作地点优先考虑南京，薪资期望为月薪 10K - 18K。",
"我心仪家居设计行业的室内设计师岗位，期望工作性质全职，工作地点可选成都、重庆，薪资范围在底薪 + 提成，综合月薪 10K - 18K。",
"我期望在环保行业担任环境工程师，工作性质为长期稳定的全职，工作地点可选广州、佛山，薪资期望月薪 12K - 20K。",
"我目标岗位是教育培训行业的少儿英语教师，工作性质全职，工作地点希望在厦门，薪资范围 8K - 12K。",
"我求职意向为跨境贸易行业的外贸业务员，期望工作性质全职，工作地点可接受义乌或深圳，薪资期望底薪 + 绩效，综合月薪 10K - 18K。",
"我希望在智能制造行业担任自动化工程师，工作性质全职，工作地点倾向于东莞，期望年薪 18 万 - 30 万。",
]

# 年龄描述模板
age_descroption = [
    "25岁","25周岁","二十五周岁","已满25岁","已满25周岁"
]

# 薪资描述模板
money_descroption = [
    "11000-15000",
    "1万1到一万5",
    "11K到15K",
    "11000-15000元",
    "1万1千到1万5千",
    "11万到15万",
    "在1万1、一万5之间"
]

# 日期描述模板
date_descroption = [
    "2023.06",
    "2023年6月",
    "2023/06",
    "2023-06"
]

# 基础提示词
base_prompt = """
# 角色：
你是一个专业且高效的简历精灵，请根据提供的 JSON 格式简历数据，以第一人称视角撰写专业、真实且有说服力的简历自述。
## 自然叙事：
摆脱模块化、机械式、分标题式表述，以连贯段落自然过渡各部分内容，像讲述个人故事般，借助时间线、因果关系等生活化逻辑串联。语言表达更贴近日常交流，使用口语化、生活化的词汇和轻松的语气词，让文字读起来更亲切，内容结构不那么刻板。
## 具体要求如下：
## 结构：
 简历自述涵盖「个人概述、教育经历、工作经历、项目经历、语言能力、证书、求职意向」等模块。开篇为个人概述，按照下列描述模块顺序进行描述，通过自然流畅的过渡串联，无需生硬分段。若某模块无数据，不作描述，不要生成'未提供'，'无数据'，'虽然我没有特别提到xxxx'等突兀的描述。
## 描述模块顺序
"""

# 结束提示词
end_prompt = """
## 内容真实性：
所有信息必须严格基于原始 JSON 数据，严禁添加未提及内容，如获奖经历、项目成果、技能优势等。
## 内容完整性
内容需要包含json数据中的所有信息，不要省略json中的任何数据，空数据不包含。
## 结束语
最后增加一些结束语
"""

# 证书提示词
certificate_prompt = """
### 证书：
注明证书具体名称。
"""

# 语言提示词
language_prompt = """
### 语言：
分别阐述语言的读写、听说水平。
"""

# 生成标准提示词（原resume_prompt_generate.py的功能）
def generate_standard_prompt():
    """生成标准的简历提示词"""
    individual_resume_detail = individual_resume[0]
    age_reference = age_descroption[0]
    purpose_reference = purposes_description[0]
    salary_reference = money_descroption[0]
    education_reference = edu_description[0]
    date_reference = date_descroption[0]

    personal_summary_prompt = f"""
### 个人概述：
依次说明姓名、年龄、性别、工作年限、学历、专业、手机号码、电子邮箱及现居地，顺序可灵活调整，没有值的数据不做描述。格式如下：'{individual_resume_detail}'， 再结合求职意向和工作内容中的核心成果与技能，提炼 1 - 2 项核心竞争优势，比如扎实的专业知识储备或丰富的实践操作能力
，提炼个人优势，呼应职业类别风格。技术类突出技术攻关成就与技术前瞻性；管理类强调统筹全局、带领团队达成目标的能力；创意类展现独特创作理念与行业影响力；商务类凸显市场拓展与客户维护的卓越表现；职能类强调流程优化与企业运营保障能力。年龄表述参照 '{age_reference}' 。
"""

    purpose_prompt = f"""
### 求职意向：
对每一条意向都单独列出，每一条的数据包含期望行业、目标岗位、工作性质、工作地点及薪资范围，不限行业也单独列出，不用强硬分段，以自然的语言连接。可简要阐述职业发展方向，展现清晰的职业规划。格式如下：'{purpose_reference}'。 薪资范围转化为'{salary_reference}'的格式。
"""

    education_prompt = f"""
### 教育经历：
明确标注学校名称、专业、学历及具体起止时间段。格式如下： '{education_reference}'。时间段格式转换成'{date_reference}'格式。
"""
    
    work_prompt = f"""
### 工作经历：
按时间倒叙呈现所有经历，清晰说明每段经历的起止时间段、公司名称、担任职位以及工作内容，不要省略时间段。表述需与原数据内容一字不差！避免使用 "近两年""近期" 等模糊表述。时间段格式转换成'{date_reference}'格式。

"""
    
    project_prompt = f"""
### 项目经历：
同样按时间倒叙描述，清晰说明每段经历的起止时间段、项目名称及项目内容，杜绝任务简单罗列，保留原数据内容，不要省略时间段。避免使用 "近两年""近期" 等模糊表述。时间段格式转换成'{date_reference}'格式。
"""

    # 组合完整提示词
    full_prompt = base_prompt
    full_prompt += personal_summary_prompt
    full_prompt += purpose_prompt
    full_prompt += certificate_prompt
    full_prompt += education_prompt
    full_prompt += work_prompt
    full_prompt += project_prompt
    full_prompt += language_prompt
    full_prompt += end_prompt
    
    return full_prompt

# 生成随机提示词（原generate_random_prompts.py的功能）
def generate_random_prompt():
    """生成一个随机组合的提示词"""
    
    # 中间的6个提示词部分（personal_summary_prompt固定在base_prompt后面）
    middle_prompts = [
        'purpose_prompt', 
        'certificate_prompt',
        'education_prompt',
        'work_prompt',
        'project_prompt',
        'language_prompt'
    ]
    
    # 随机打乱顺序
    random.shuffle(middle_prompts)
    
    # 随机选择格式化引用
    individual_resume_detail = random.choice(individual_resume)
    age_reference = random.choice(age_descroption)
    purpose_reference = random.choice(purposes_description)
    salary_reference = random.choice(money_descroption)
    education_reference = random.choice(edu_description)
    date_reference = random.choice(date_descroption)
    
    # 重新生成带有随机引用的提示词
    random_personal_summary_prompt = f"""
### 个人概述：
依次说明姓名、年龄、性别、工作年限、学历、专业、手机号码、电子邮箱及现居地，顺序可灵活调整，没有值的数据不做描述。格式如下：'{individual_resume_detail}'， 再结合求职意向和工作内容中的核心成果与技能，提炼 1 - 2 项核心竞争优势，比如扎实的专业知识储备或丰富的实践操作能力
，提炼个人优势，呼应职业类别风格。技术类突出技术攻关成就与技术前瞻性；管理类强调统筹全局、带领团队达成目标的能力；创意类展现独特创作理念与行业影响力；商务类凸显市场拓展与客户维护的卓越表现；职能类强调流程优化与企业运营保障能力。年龄表述参照 '{age_reference}' 。
"""
    
    random_purpose_prompt = f"""
### 求职意向：
对每一条意向都单独列出，每一条的数据包含期望行业、目标岗位、工作性质、工作地点及薪资范围，不限行业也单独列出，不用强硬分段，以自然的语言连接。可简要阐述职业发展方向，展现清晰的职业规划。格式如下：'{purpose_reference}'。 薪资范围转化为'{salary_reference}'的格式。
"""
    
    random_education_prompt = f"""
### 教育经历：
明确标注学校名称、专业、学历及具体起止时间段。格式如下： '{education_reference}'。时间段格式转换成'{date_reference}'格式。
"""
    
    random_work_prompt = f"""
### 工作经历：
按时间倒叙呈现所有经历，清晰说明每段经历的起止时间段、公司名称、担任职位以及工作内容，不要省略时间段。表述需与原数据内容一字不差！避免使用 "近两年""近期" 等模糊表述。时间段格式转换成'{date_reference}'格式。

"""
    
    random_project_prompt = f"""
### 项目经历：
同样按时间倒叙描述，清晰说明每段经历的起止时间段、项目名称及项目内容，杜绝任务简单罗列，保留原数据内容，不要省略时间段。避免使用 "近两年""近期" 等模糊表述。时间段格式转换成'{date_reference}'格式。
"""
    
    # 提示词映射
    prompt_mapping = {
        'personal_summary_prompt': random_personal_summary_prompt,
        'purpose_prompt': random_purpose_prompt,
        'certificate_prompt': certificate_prompt,
        'education_prompt': random_education_prompt,
        'work_prompt': random_work_prompt,
        'project_prompt': random_project_prompt,
        'language_prompt': language_prompt
    }
    
    # 组合完整提示词
    full_prompt = base_prompt
    
    # 固定添加personal_summary_prompt
    full_prompt += prompt_mapping['personal_summary_prompt']
    
    # 添加随机排列的其他提示词
    for prompt_name in middle_prompts:
        full_prompt += prompt_mapping[prompt_name]
    
    full_prompt += end_prompt
    
    # 完整的模块顺序（包含固定的personal_summary_prompt）
    complete_order = ['personal_summary_prompt'] + middle_prompts
    
    return full_prompt, complete_order, {
        'individual_resume_detail': individual_resume_detail,
        'age_reference': age_reference,
        'purpose_reference': purpose_reference,
        'salary_reference': salary_reference,
        'education_reference': education_reference,
        'date_reference': date_reference
    }

def generate_40_prompts():
    """生成40份随机提示词并保存到Excel"""
    
    results = []
    
    for i in range(40):
        prompt, order, references = generate_random_prompt()
        
        result = {
            '序号': i + 1,
            '提示词': prompt,
            '模块顺序': ' -> '.join(order),
            '个人简介模板': references['individual_resume_detail'],
            '年龄表述': references['age_reference'],
            '求职意向模板': references['purpose_reference'],
            '薪资表述': references['salary_reference'],
            '教育经历模板': references['education_reference'],
            '日期格式': references['date_reference']
        }
        
        results.append(result)
    
    # 创建DataFrame
    df = pd.DataFrame(results)
    
    # 保存到Excel文件
    output_file = '/company/random_prompts_40.xlsx'
    
    with pd.ExcelWriter(output_file, engine='openpyxl') as writer:
        df.to_excel(writer, sheet_name='随机提示词', index=False)
        
        # 调整列宽
        worksheet = writer.sheets['随机提示词']
        worksheet.column_dimensions['C'].width = 50  # 提示词列
        worksheet.column_dimensions['D'].width = 30  # 模块顺序列
        worksheet.column_dimensions['E'].width = 40  # 个人简介模板列
        worksheet.column_dimensions['F'].width = 15  # 年龄表述列
        worksheet.column_dimensions['G'].width = 40  # 求职意向模板列
        worksheet.column_dimensions['H'].width = 20  # 薪资表述列
        worksheet.column_dimensions['I'].width = 40  # 教育经历模板列
        worksheet.column_dimensions['J'].width = 15  # 日期格式列
    
    print(f"已生成40份随机提示词，保存到: {output_file}")
    print(f"总共生成 {len(results)} 份提示词")
    
    # 显示前3个示例的模块顺序
    print("\n前3个示例的模块顺序：")
    for i in range(min(3, len(results))):
        print(f"示例{i+1}: {results[i]['模块顺序']}")

if __name__ == "__main__":
    print("=== 合并的提示词生成器 ===")
    print("1. 生成标准提示词")
    print("2. 生成40份随机提示词")
    
    choice = input("请选择功能 (1/2): ")
    
    if choice == '1':
        standard_prompt = generate_standard_prompt()
        print("\n=== 标准提示词 ===")
        print(standard_prompt)
    elif choice == '2':
        generate_40_prompts()
    else:
        print("无效选择，默认生成40份随机提示词")
        generate_40_prompts()